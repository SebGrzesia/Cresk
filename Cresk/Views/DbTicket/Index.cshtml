@using Cresk.Enums
@model Cresk.ViewModels.Tickets.TicketIndexViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Tickets List</h1>

<p>
    <a asp-action="Create" class="btn btn-outline-success">
        <i class="fa-add fa-solid"></i>
        Create New</a>
</p>

<form asp-controller="DbTicket" asp-action="Index" method="get">
    <form>
        <div class="form-group">
            Search by name: <input type="text" name="SearchString" value="@Html.ValueFor(model => model.SearchString)" class="form-control" />
        </div>
        <div class="form-group row">
            <div class="form-group col-md-6">
                <label for="inputStatus">Status</label>
                <select asp-for="TicketStatus" asp-items="Html.GetEnumSelectList<TicketStatus>()" class="form-control" id="TicketStatus">
                    <option value="">All</option>
                </select>
            </div>
            <div class="form-group col-md-6">
                <label for="inputPriority">Priority</label>
                <select asp-for="TicketPriority" asp-items="Html.GetEnumSelectList<TicketPriority>()" class="form-control" id="inputPriority">
                    <option value="">All</option>
                </select>
            </div>
        </div>
        Category:
        <select asp-for="CategoryId" asp-items="Model.CategoryList" class="form-select">
            <option value="">No</option>
        </select>
        <input type="submit" class="btn btn-secondary" value="Search" />
        <a class="btn btn-secondary" asp-action="Index">Clear filters</a>
    </form>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.IndexDbTicketViewModels[0].TicketDisplayNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IndexDbTicketViewModels[0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IndexDbTicketViewModels[0].CategoryName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IndexDbTicketViewModels[0].TicketStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IndexDbTicketViewModels[0].TicketPriority)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IndexDbTicketViewModels[0].ModifyDate)
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.IndexDbTicketViewModels) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.TicketDisplayNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketStatus)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketPriority)
            </td>
            <td>
            @{
                if(item.ModifyDate >= DateTime.Today)
                {
                    @Html.Raw(item.ModifyDate.ToString("H:mm"))

                }
                else
                {
                    @Html.Raw(item.ModifyDate.ToString("MMMM dd, yyyy"))
                }
            }
                
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id" class="fa-solid fa-circle-info"></a>
                <a asp-action="Delete" asp-route-id="@item.Id" class="fa-solid fa-trash text-danger"></a>
            </td>
        </tr>
}
    </tbody>
</table>
